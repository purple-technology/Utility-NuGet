variables:
  BuildArguments: '--configuration Release --framework netstandard2.1 -maxcpucount --verbosity detailed'

name: $(GITVERSION_SemVer)

trigger:
- master
- feature/*

pr:
- master
- feature/*

pool:
  vmImage: 'windows-latest'

steps:

- task: GitVersion@5
  inputs:
    runtime: 'core'
    preferBundledVersion: false

- task: NuGetToolInstaller@0
  displayName: 'Install Nuget'
  inputs:
    versionSpec: '>=5.3.0'
    checkLatest: true

- task: DotNetCoreCLI@2
  displayName: 'Build runtime library'
  inputs:
    command: build

- task: DotNetCoreCLI@2
  displayName: 'Pack nuget package'
  inputs:
    command: 'pack'
    packagesToPack: '$(BuildProject)'
    arguments: '--configuration Release --no-build --no-dependencies --no-restore --nologo --verbosity detailed'
    packDirectory: '$(Build.ArtifactStagingDirectory)/PurpleTechnology.Common.Utils'
    versioningScheme: byEnvVar
    versionEnvVar: 'GitVersion.NuGetVersion'

- task: PublishBuildArtifacts@1
  displayName: 'Publish artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/PurpleTechnology.Common.Utils'
    ArtifactName: PurpleTechnology.Common.Utils
    parallel: true

- task: DotNetCoreCLI@2
  displayName: 'Publish nuget package to the feed'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/PurpleTechnology.Common.Utils/*.nupkg'
    nuGetFeedType: 'internal'
    feedPublish: 'Putech'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
